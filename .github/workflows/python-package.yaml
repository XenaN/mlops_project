  on:
    push:
      branches:
        - '**'
    pull_request:
      branches:
        - main

  jobs:
    linter_step:
      runs-on: self-hosted
      steps:
        - uses: actions/checkout@v3

#        - name: Install Python 3.9
#          uses: actions/setup-python@v3
#          with:
#            python-version: 3.9

        - name: Activate venv
          run: |
            python3 -m pip install --upgrade pip
            python3 -m venv venv
            source venv/bin/activate

        - name: Installation libs
          run: |
            pip install flake8 black

        - name: Run Black
          run: black . --line-length 88 --exclude '(venv)' --check

        - name: Linter
          run: flake8 $(git ls-files '*.py') --max-line-length 88 --ignore F401,F841,W503


    test_step:
      runs-on: self-hosted
      steps:
        - uses: actions/checkout@v3
#        - name: Install poetry
#          run: pipx install poetry
#        - uses: actions/setup-python@v3
#          with:
#            python-version: '3.9'
#            cache: 'poetry'
#        - run: poetry install
#
        - name: Pytest
          run: |
            poetry install
            poetry run dvc pull
            poetry run pytest --disable-warnings


#    build-and-push-docker-image:
#        name: Build Docker image and push to repositories
#        runs-on: ubuntu-latest
#        needs: [linter_step, test_step]
#        steps:
#          - name: Checkout code
#            uses: actions/checkout@v3
#
#          - name: Set up Docker Buildx
#            id: buildx
#            uses: docker/setup-buildx-action@v2
#
#          - name: Login to DockerHub
#            uses: docker/login-action@v2
#            with:
#              username: ${{ secrets.DOCKERHUB_USERNAME }}
#              password: ${{ secrets.DOCKERHUB_TOKEN }}
#
#          - name: Login to Github Packages
#            uses: docker/login-action@v1
#            with:
#              registry: ghcr.io
#              username: ${{ github.actor }}
#              password: ${{ secrets.GHCR_PAT }}
#
#          - name: Build image and push to Docker Hub and GitHub Container Registry
#            uses: docker/build-push-action@v3
#            with:
#              context: .
#              file: docker/model_service/Dockerfile
#              tags: |
#                xenan/model_service:latest
#                ghcr.io/xenan/model_service:latest
#              push: true
#
#          - name: Image digest
#            run: echo ${{ steps.docker_build.outputs.digest }}