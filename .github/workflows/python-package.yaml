  on:
    push:
      branches:
        - '**'
    pull_request:
      branches:
        - main

  jobs:
    linter_step:
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v3

        - name: Install Python 3.9
          uses: actions/setup-python@v3
          with:
            python-version: 3.9

        - name: Activate venv
          run: |
            python3.9 -m pip install --upgrade pip
            python3.9 -m venv venv
            source venv/bin/activate

        - name: Installation libs
          run: |
            pip install flake8 black

        - name: Run Black
          run: black . --line-length 88 --check

        - name: Linter
          run: flake8 $(git ls-files '*.py') --max-line-length 88 --ignore F401,F841,W503


    test_step:
      runs-on: ubuntu-latest
      steps:
        - name: Install Python 3.9
          uses: actions/setup-python@v3
          with:
            python-version: 3.9

        - name: Install Poetry
          uses: snok/install-poetry@v1
          with:
            virtualenvs-create: true
            virtualenvs-in-project: true

        - uses: actions/checkout@v3

        - name: Cache dependencies
          id: cached-poetry-dependencies
          uses: actions/cache@v3
          with:
            path: ${{ env.pythonLocation }}
            key: ${{ env.pythonLocation }}-${{ runner.os }}-mycache-v1-${{ hashFiles('**/poetry.lock') }}

        - name: Install dependencies
          if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
          run: poetry install --no-interaction --no-root

        - name: Pytest
          run: |
            poetry show --tree
            poetry run dvc pull
            poetry run pytest --disable-warnings